package com.group1.mstory.controller;

import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.group1.mstory.connectors.JdbcConnector;
import com.group1.mstory.login.UserRepository;
import com.group1.mstory.login.Users;

@Controller // This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /demo (after Application path)
public class UserController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @Autowired
  JdbcConnector jdbcConnector;

//   @PostMapping(path="/add") // Map ONLY POST Requests
//   public @ResponseBody String addNewUser (@RequestParam String name
//       , @RequestParam String email, @RequestParam String) {
//     // @ResponseBody means the returned String is the response, not a view name
//     // @RequestParam means it is a parameter from the GET or POST request

//     Users n = new Users();
//     n.setEmail(email);
//     userRepository.save(n);
//     return "Saved";
//   }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Users> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  public int getUserBasketId(int userId){
    String sql = "SELECT * FROM users WHERE id = ?;";

    try {
      PreparedStatement ps = jdbcConnector.prepareStatement(sql);
      ps.setInt(1,userId);
      ResultSet rs = ps.executeQuery();
      rs.next();
      return rs.getInt("basketid");
    } catch (Exception ex) {
      ex.printStackTrace();
    }
    return -1;
  }

}